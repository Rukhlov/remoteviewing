name: build
on:
  push:
    branches:
      - master
  pull_request:

env:
  LIBVNC_VERSION: "0.9.13"

jobs:
  native-windows:
    strategy:
      matrix:
        include:
        - arch: Win32
          rid: win7-x86
          triplet: x86-windows
        - arch: x64
          rid: win7-x64
          triplet: x64-windows
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dotnet/nbgv@v0.4.0
        id: nbgv
        with:
          path: src
      - name: Clone LibVNCServer
        run: |
          git clone --branch LibVNCServer-${{ env.LIBVNC_VERSION }} --depth 1 https://github.com/LibVNC/libvncserver/
          git show
      - name: Cache vcpkg downloads
        uses: actions/cache@v4
        with:
          path: C:/vcpkg/downloads
          key: vcpkg_downloads | ${{ matrix.triplet }}
      - name: Cache vcpkg installed
        uses: actions/cache@v4
        with:
          path: C:/vcpkg/installed
          key: vcpkg_downloads | ${{ matrix.triplet }}
      - name: Install dependencies
        run: |
          C:\vcpkg\vcpkg.exe version
          C:\vcpkg\vcpkg.exe install libpng:${{ matrix.triplet }}
          C:\vcpkg\vcpkg.exe install zlib:${{ matrix.triplet }}
          C:\vcpkg\vcpkg.exe install libjpeg-turbo:${{ matrix.triplet }}
      - name: Configure LibVNC
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg/scripts/buildsystems/vcpkg.cmake -DBUILD_SHARED_LIBS=ON -DWITH_OPENSSL=OFF -DWITH_GCRYPT=OFF -DWITH_GNUTLS=OFF -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/${{ matrix.rid }} ../libvncserver/ -A ${{ matrix.arch }} "-DCMAKE_POLICY_VERSION_MINIMUM=3.5"
      - name: Compile LibVNC
        run: |
          cmake --build . --target vncserver --config Release
          dir .
        working-directory: build
      - name: Install LibVNC
        run: |
          New-Item ${{ github.workspace }}\libvnc\${{ matrix.rid }}\ -ItemType Directory -Force
          copy Release\*.* ${{ github.workspace }}\libvnc\${{ matrix.rid }}\
        working-directory: build
      - name: Build vnclogger
        run : |
          mkdir build
          cd build
          cmake -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg/scripts/buildsystems/vcpkg.cmake -A ${{ matrix.arch }} "-DCMAKE_POLICY_VERSION_MINIMUM=3.5" ..
          cmake --build . --config Release
          New-Item ${{ github.workspace }}\libvnc\${{ matrix.rid }} -ItemType Directory -Force
          copy Release\*.* ${{ github.workspace }}\libvnc\${{ matrix.rid }}
        working-directory: '${{ github.workspace }}/RemoteViewing.LibVnc.Logging'
      - name: Upload libvnc artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libvnc-${{ github.run_id }}-${{ matrix.rid }}
          path: |
            ${{ github.workspace }}\libvnc\

  build:
    needs:
    - native-windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: libvnc-${{ github.run_id }}-win7-x64
          path: ${{ github.workspace }}/libvnc/
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'
      - name: Test
        run: |
          $env:PATH="${{ github.workspace }}/libvnc/win7-x64/;$env:PATH"
          dotnet test RemoteViewing.sln
        working-directory: ${{ github.workspace }}
      - name: Pack
        run: |
          mkdir ${{ github.workspace }}/nuget
          dotnet pack RemoteViewing.sln -c Release -o ${{ github.workspace }}/nuget
        working-directory: ${{ github.workspace }}
      - name: Upload libvnc artifacts
        uses: actions/upload-artifact@v4
        with:
          name: remoteviewing-${{ github.run_id }}
          path: |
            ${{ github.workspace }}/nuget/

